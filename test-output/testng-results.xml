<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="6" failed="2" skipped="2">
  <reporter-output>
    <line>
      <![CDATA[Take Screen Shot After method faile]]>
    </line>
    <line>
      <![CDATA[TC1 is Pass]]>
    </line>
    <line>
      <![CDATA[After succesful method]]>
    </line>
    <line>
      <![CDATA[TC2 is Pass]]>
    </line>
    <line>
      <![CDATA[After succesful method]]>
    </line>
    <line>
      <![CDATA[TC4 is Pass]]>
    </line>
    <line>
      <![CDATA[After succesful method]]>
    </line>
    <line>
      <![CDATA[To Skipped All methods]]>
    </line>
    <line>
      <![CDATA[TC6 is Pass]]>
    </line>
    <line>
      <![CDATA[After succesful method]]>
    </line>
    <line>
      <![CDATA[TC7 is Pass]]>
    </line>
    <line>
      <![CDATA[After succesful method]]>
    </line>
    <line>
      <![CDATA[Take Screen Shot After method faile]]>
    </line>
    <line>
      <![CDATA[TC9 is Pass]]>
    </line>
    <line>
      <![CDATA[After succesful method]]>
    </line>
    <line>
      <![CDATA[To Skipped All methods]]>
    </line>
  </reporter-output>
  <suite started-at="2021-12-08T16:22:05 IST" name="Suite" finished-at="2021-12-08T16:22:05 IST" duration-ms="265">
    <groups>
    </groups>
    <test started-at="2021-12-08T16:22:05 IST" name="Test" finished-at="2021-12-08T16:22:05 IST" duration-ms="265">
      <class name="Listener_Study.teste1">
        <test-method signature="TC3()[pri:0, instance:Listener_Study.teste1@c88a337]" started-at="2021-12-08T16:22:05 IST" name="TC3" finished-at="2021-12-08T16:22:05 IST" duration-ms="21" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at Listener_Study.teste1.TC3(teste1.java:18)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Take Screen Shot After method faile]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC3 -->
        <test-method signature="TC1()[pri:0, instance:Listener_Study.teste1@c88a337]" started-at="2021-12-08T16:22:05 IST" name="TC1" finished-at="2021-12-08T16:22:05 IST" duration-ms="7" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TC1 is Pass]]>
            </line>
            <line>
              <![CDATA[After succesful method]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC1 -->
        <test-method signature="TC2()[pri:0, instance:Listener_Study.teste1@c88a337]" started-at="2021-12-08T16:22:05 IST" name="TC2" finished-at="2021-12-08T16:22:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TC2 is Pass]]>
            </line>
            <line>
              <![CDATA[After succesful method]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC2 -->
        <test-method signature="TC4()[pri:0, instance:Listener_Study.teste1@c88a337]" started-at="2021-12-08T16:22:05 IST" name="TC4" finished-at="2021-12-08T16:22:05 IST" duration-ms="5" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TC4 is Pass]]>
            </line>
            <line>
              <![CDATA[After succesful method]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC4 -->
        <test-method signature="TC5()[pri:0, instance:Listener_Study.teste1@c88a337]" started-at="2021-12-08T16:22:05 IST" name="TC5" finished-at="2021-12-08T16:22:05 IST" depends-on-methods="Listener_Study.teste1.TC3" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method teste1.TC5()[pri:0, instance:Listener_Study.teste1@c88a337] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method teste1.TC5()[pri:0, instance:Listener_Study.teste1@c88a337] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[To Skipped All methods]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC5 -->
      </class> <!-- Listener_Study.teste1 -->
      <class name="Listener_Study.test2">
        <test-method signature="TC6()[pri:0, instance:Listener_Study.test2@1e1a0406]" started-at="2021-12-08T16:22:05 IST" name="TC6" finished-at="2021-12-08T16:22:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TC6 is Pass]]>
            </line>
            <line>
              <![CDATA[After succesful method]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC6 -->
        <test-method signature="TC7()[pri:0, instance:Listener_Study.test2@1e1a0406]" started-at="2021-12-08T16:22:05 IST" name="TC7" finished-at="2021-12-08T16:22:05 IST" duration-ms="6" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TC7 is Pass]]>
            </line>
            <line>
              <![CDATA[After succesful method]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC7 -->
        <test-method signature="TC8()[pri:0, instance:Listener_Study.test2@1e1a0406]" started-at="2021-12-08T16:22:05 IST" name="TC8" finished-at="2021-12-08T16:22:05 IST" duration-ms="8" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at Listener_Study.test2.TC8(test2.java:18)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Take Screen Shot After method faile]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC8 -->
        <test-method signature="TC9()[pri:0, instance:Listener_Study.test2@1e1a0406]" started-at="2021-12-08T16:22:05 IST" name="TC9" finished-at="2021-12-08T16:22:05 IST" duration-ms="4" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TC9 is Pass]]>
            </line>
            <line>
              <![CDATA[After succesful method]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC9 -->
        <test-method signature="TC10()[pri:0, instance:Listener_Study.test2@1e1a0406]" started-at="2021-12-08T16:22:05 IST" name="TC10" finished-at="2021-12-08T16:22:05 IST" depends-on-methods="Listener_Study.test2.TC8" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method test2.TC10()[pri:0, instance:Listener_Study.test2@1e1a0406] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method test2.TC10()[pri:0, instance:Listener_Study.test2@1e1a0406] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[To Skipped All methods]]>
            </line>
          </reporter-output>
        </test-method> <!-- TC10 -->
      </class> <!-- Listener_Study.test2 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
